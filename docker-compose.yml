version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: analytics_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: analytics
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.15-community
    container_name: analytics_neo4j
    restart: unless-stopped
    environment:
      NEO4J_AUTH: neo4j/password123
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_server_memory_heap_initial__size: 512m
      NEO4J_server_memory_heap_max__size: 2G
      NEO4J_server_memory_pagecache_size: 1G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "password123", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # n8n Workflow Automation
  n8n:
    image: n8nio/n8n:latest
    container_name: analytics_n8n
    restart: unless-stopped
    environment:
      N8N_HOST: localhost
      N8N_PORT: 5678
      N8N_PROTOCOL: http
      NODE_ENV: production
      WEBHOOK_URL: http://localhost:5678/
      GENERIC_TIMEZONE: Europe/Rome
      N8N_USER_MANAGEMENT_DISABLED: true
      N8N_DISABLE_UI: false
      N8N_API_KEY: your-n8n-api-key-here
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n-workflows:/home/node/.n8n/workflows
    ports:
      - "5678:5678"
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend & Backend Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: analytics_app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:password123@postgres:5432/analytics
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USERNAME: neo4j
      NEO4J_PASSWORD: password123
      N8N_BASE_URL: http://n8n:5678
      N8N_API_KEY: your-n8n-api-key-here
      N8N_WORKFLOW_ID: your-workflow-id-here
      SESSION_SECRET: your-very-secure-session-secret-here
      REPLIT_DOMAINS: localhost
      ISSUER_URL: https://replit.com/oidc
      REPL_ID: your-repl-id-here
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      n8n:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  n8n_data:
    driver: local

networks:
  default:
    name: analytics_network